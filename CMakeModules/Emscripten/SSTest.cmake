set(SSTEST_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

function(ADD_SSTEST_FILE TARGET_NAME)
	get_property(FILE_LIST GLOBAL PROPERTY SSTEST_${TARGET_NAME}_SOURCES)
	foreach(FILE_PATH ${ARGN})
		if(EXISTS FILE_PATH)
			get_filename_component(FILE_PATH ${FILE_PATH} REALPATH)
		else()
			set(FILE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${FILE_PATH})
			if(EXISTS FILE_PATH)
				get_filename_component(FILE_PATH ${FILE_PATH} REALPATH)
			endif()
		endif()
		list(APPEND FILE_LIST ${FILE_PATH})
	endforeach()
	set_property(GLOBAL PROPERTY SSTEST_${TARGET_NAME}_SOURCES ${FILE_LIST})
endfunction()


function(ADD_SSTEST_EXECUTABLE TARGET_NAME)
	get_property(GLOBAL_SOURCES GLOBAL PROPERTY SSTEST_${TARGET_NAME}_SOURCES)
	add_executable(${TARGET_NAME} ${GLOBAL_SOURCES} ${ARGN} ${SSTEST_MODULE_PATH}/SSTest_main.cpp)
	
	# A bit very hacky, but it works
	set(CMD ${CMAKE_COMMAND} -D _BUILD_DIR=${CMAKE_CURRENT_BINARY_DIR} -D _TARGET_NAME=${TARGET_NAME} -D _TARGET=$<TARGET_FILE:${TARGET_NAME}> -P ${SSTEST_MODULE_PATH}/SSTest_AddTestsFromOutput.cmake)
	add_custom_command(TARGET ${TARGET_NAME} POST_BUILD COMMAND ${CMD})
	file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/SSTestFiles)
	if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/SSTestFiles/CMakeLists.txt)
		
	else()
		file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/SSTestFiles/CMakeLists.txt "\n")
	endif()
	add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/SSTestFiles ${CMAKE_CURRENT_BINARY_DIR}/SSTestFiles)
endfunction()